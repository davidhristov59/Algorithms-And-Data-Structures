import com.sun.source.tree.WhileLoopTree;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

class SLLNode<E>
{
    E element;
    SLLNode<E> succ;

    SLLNode(){}
    SLLNode(E element, SLLNode<E> succ)
    {
        this.element=element;
        this.succ=succ;
    }
}
class SLL<E>
{
    SLLNode<E> first;
    SLL()
    {
        first=null;
    }
    public void insertFirst(E element)
    {
        SLLNode<E> nov = new SLLNode<>(element,first);
        first = nov;
    }
    public void insertLast(E element)
    {
        if(first==null) insertFirst(element);
        else
        {
            SLLNode<E> dvizi = first;
            while(dvizi.succ != null)
            {
                dvizi = dvizi.succ;
            }
            SLLNode<E> last = new SLLNode<>(element,null);
            dvizi.succ=last;
        }
    }
    public void insertAfter(E element, SLLNode<E>node)
    {
        if(node!=null){
            SLLNode<E> nov = new SLLNode<>(element,node.succ);
            node.succ = nov;
        }
    }

    public int getLength()
    {
        SLLNode<E> dvizi = first;
        int length = 0;
        while(dvizi!=null)
        {
            length++;
            dvizi = dvizi.succ;
        }
        return length;
    }


    public String toString()
    {
        String s = new String();
        SLLNode<E> dvizi = first;
        while(dvizi!=null)
        {
            s = s+dvizi.element+" ";
            dvizi=dvizi.succ;
        }
        return s;
    }
    public SLLNode<E> getFirst()
    {
        return first;
    }

}

public class Main {

    private static SLL<Integer> specialJoin(SLL<Integer> lista1,SLL<Integer> lista2) {
        SLL<Integer> nova = new SLL();
        SLLNode<Integer> dvizi = lista1.getFirst();
        SLLNode<Integer> dvizi2 = lista2.getFirst();
        int count = 0;
        while (dvizi != null && dvizi2 != null){
            if(count < 2){
                nova.insertLast(dvizi.element);
                dvizi = dvizi.succ;
                count++;
            }
            else{
                nova.insertLast(dvizi2.element);
                dvizi2 = dvizi2.succ;
                count++;
            }
            if(count > 3){
                count = 0;
            }
        }
        while (dvizi != null){
            nova.insertLast(dvizi.element);
            dvizi = dvizi.succ;
        }
        while (dvizi2 != null){
            nova.insertLast(dvizi2.element);
            dvizi2 = dvizi2.succ;
        }
        return nova;
    }


    public static void main(String[] args) throws IOException{

        SLL<Integer> lista1 = new SLL<>();
        SLL<Integer> lista2 = new SLL<>();

        BufferedReader stdin = new BufferedReader(new InputStreamReader(
                System.in));
        String s = stdin.readLine();
        int N = Integer.parseInt(s);
        s = stdin.readLine();
        String[] pomniza = s.split(" ");
        for (int i = 0; i < N; i++) {
            lista1.insertLast(Integer.parseInt(pomniza[i]));
        }

        s = stdin.readLine();
        N = Integer.parseInt(s);
        s = stdin.readLine();
        pomniza = s.split(" ");
        for (int i = 0; i < N; i++) {
            lista2.insertLast(Integer.parseInt(pomniza[i]));
        }

        SLL<Integer> spoeni = specialJoin(lista1,lista2);
        System.out.println(spoeni);

    }


}